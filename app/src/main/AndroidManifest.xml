<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.bptracker">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/> -->

    <uses-permission android:name="com.bptracker.permission.RECEIVE_EVENTS" />
    <uses-permission android:name="com.bptracker.permission.RECEIVE_DEVICE_EVENTS" />
    <uses-permission android:name="com.bptracker.permission.RUN_DEVICE_FUNCTION" />
    <uses-permission android:name="com.bptracker.permission.C2D_MESSAGE" />

    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />


    <uses-feature android:name="android.hardware.location.gps" />

    <!--
    https://github.com/codepath/android_guides/wiki/Starting-Background-Services
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    -->


    <!-- For Google Cloud Messaging service -->
    <permission android:name="com.bptracker.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />


    <!--
        Broadcasts com.bptracker.permission.RECEIVE_EVENTS intents (See IntentUtil)

        Supported actions: com.bptracker.intent.action.BPT_EVENT
        Supported mime-type: vnd.android.cursor.item/com.bptracker/events
    -->
    <permission
        android:name="com.bptracker.permission.RECEIVE_EVENTS"
        android:description="@string/perm_receive_bpt_events_desc"
        android:label="@string/perm_receive_bpt_events_label"
        android:protectionLevel="normal" />

    <!--
         Broadcasts com.bptracker.permission.RECEIVE_DEVICE_EVENTS intent (See IntentUtil)

         Supported actions: com.bptracker.intent.action.DEVICE_EVENT
         Supported mime-type: vnd.android.cursor.item/com.bptracker/events
    -->
    <permission
        android:name="com.bptracker.permission.RECEIVE_DEVICE_EVENTS"
        android:description="@string/perm_receive_device_events_desc"
        android:label="@string/perm_receive_device_events_label"
        android:protectionLevel="signature" />

    <!--
        Allows external applications the ability to run functions on a device.
        See ExternalService.

        Support actions: com.bptracker.intent.action.RUN_DEVICE_FUNCTION
    -->
    <permission
        android:name="com.bptracker.permission.RUN_DEVICE_FUNCTION"
        android:description="@string/perm_run_device_function_desc"
        android:label="@string/perm_run_device_function_label"
        android:protectionLevel="signature" />

    <application
        android:name=".TrackerApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="false"
        android:theme="@style/AppTheme">
        <activity
            android:name=".LoginActivity"
            android:label="@string/app_name" />
        <activity android:name=".IntroActivity" />
        <activity android:name=".LauncherActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".MainActivity" />

        <!-- android:theme="@style/AppTheme.NoActionBar" -->
        <activity
            android:name=".DeviceActivity"
            android:label="@string/title_activity_device" />

        <provider
            android:name=".data.BptProvider"
            android:authorities="@string/content_authority"
            android:exported="false"
            android:syncable="true" />

        <service
            android:name=".service.LoadDevicesService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.bptracker.intent.action.LOAD_DEVICES" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>
        <service
            android:name=".service.RunFunctionService"
            android:exported="false" />

        <service
            android:name=".service.DeviceEventService"
            android:exported="false" /> <!-- TODO: android:singleUser="true" -->

        <service
            android:name=".service.ExternalService"
            android:exported="true"
            android:permission="com.bptracker.permission.RUN_DEVICE_FUNCTION">
            <intent-filter>
                <action android:name="com.bptracker.intent.action.RUN_DEVICE_FUNCTION" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>

        <receiver
            android:name=".receiver.BootCompletedReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name=".receiver.BptEventReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="com.bptracker.intent.action.BPT_EVENT" />

                <data android:mimeType="vnd.android.cursor.item/com.bptracker/events" />
            </intent-filter>
        </receiver>


        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <category android:name="com.bptracker" />
            </intent-filter>
        </receiver>


        <service
            android:name=".service.GcmPushService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>


        <service
            android:name=".service.GcmTokenService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID"/>
            </intent-filter>
        </service>


        <!--
        <receiver android:name=".service.LoadDevicesService$TestReceiver">
            <intent-filter>
                <action android:name="net.superblock.pushover.NEW_MESSAGE" />
            </intent-filter>
        </receiver>
        -->


        <!-- @style/Theme.AppCompat.Translucent android:theme="@android:style/Theme.Translucent" -->

        <activity
            android:name=".SelectStateActivity"
            android:theme="@style/AppTheme.Transparent" />
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".DeviceLocationActivity"
            android:label="@string/title_activity_device_location" />
        <activity
            android:name=".SettingsActivity"
            android:label="@string/title_activity_settings"></activity>
    </application>

</manifest>